name: "Deploy staging - api-user-java (Java)"

# run on push to main branch
on:
  push:
    branches:
      - main
    paths:
      - "apis/user-java/**"
  workflow_dispatch:

# Set envs
env:
  WORKDIR: "apis/user-java"
  DOCKER_IMAGE_BASE_NAME: "devopsoh/api-user-java"
  API_NAME: "user-java"
  AZURE_WEBAPP_NAME: "devopsoh58998userjava"
  
  
  # RESOURCES_PREFIX: "devopsoh44707" # hardcoded or dynamic based on repo name

# Set defaults for GitHub Actions runner
defaults:
  run:
    working-directory: "apis/user-java"

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    outputs:
      RESOURCES_PREFIX: ${{ steps.resources_prefix.outputs.result }}
      DOCKER_IMAGE_FULL_NAME: ${{ steps.dockerfullname.outputs.DOCKER_IMAGE_FULL_NAME }}
    steps:
      - uses: actions/checkout@v2

      # Get RESOURCES_PREFIX based on the repo name
      - name: Get repo name
        uses: actions/github-script@v5
        id: resources_prefix
        with:
          result-encoding: string
          script: return context.repo.repo.toLowerCase()

      # AZURE CONTAINER REGISTRY
      - name: Get docker image full name
        run: |
          DOCKER_IMAGE_FULL_NAME=${{ steps.resources_prefix.outputs.result }}cr.azurecr.io/${{ env.DOCKER_IMAGE_BASE_NAME }}

          # Set for current Job
          echo "DOCKER_IMAGE_FULL_NAME=${DOCKER_IMAGE_FULL_NAME}" >> ${GITHUB_ENV}

          # Set for next Job
          echo "::set-output name=DOCKER_IMAGE_FULL_NAME::${DOCKER_IMAGE_FULL_NAME}"
        id: dockerfullname

      - name: "Azure Login"
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Build Docker image using Azure Container Registry"
        uses: Azure/cli@v1
        with:
          inlineScript: az acr build --image ${{ env.DOCKER_IMAGE_BASE_NAME }}:${{ github.run_id }} --registry ${{ steps.resources_prefix.outputs.result }}cr.azurecr.io --build-arg build_version=${{ github.run_id }} --file ${{ env.WORKDIR }}/Dockerfile ${{ env.WORKDIR }}
  deploy:
      permissions:
        contents: none
      runs-on: ubuntu-latest
      needs: build
      environment:
        name: 'staging-user-java'
        url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

      steps:
        - name: Deploy to Azure Web App
          id: deploy-to-webapp
          uses: azure/webapps-deploy@v2
          with:
            app-name: ${{ env.AZURE_WEBAPP_NAME }}
           # app-name: "devopsoh58998userjava-staging"
            publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_STAGING }}
            images: ${{ env.DOCKER_IMAGE_FULL_NAME }}:${{ github.run_id }}
            slot-name: staging
            
        - name: Check the deployed service URL
          uses: jtalk/url-health-check-action@v2
          with:
            # Check the following URLs one by one sequentially
            url: https://devopsoh58998userjava-staging.azurewebsites.net/api/healthcheck/user-java
            # Follow redirects, or just report success on 3xx status codes
            follow-redirect: false # Optional, defaults to "false"
            # Fail this action after this many failed attempts
            max-attempts: 5 # Optional, defaults to 1
            # Delay between retries
            retry-delay: 10s # Optional, only applicable to max-attempts > 1
            # Retry all errors, including 404. This option might trigger curl upgrade.
            retry-all: true # Optional, defaults to "false"
